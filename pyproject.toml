[project]
name = "django-matryoshka"
version = "0.1.0"
description = "Lightweight API framework for django 5.2+"
authors = [
  { name = "Alexey Potapov", email = "me@black-as-ink.ru" },
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "django>=5.2",
]

[project.optional-dependencies]
docs = [
    "mkdocs-material>=9.6.20",
    "mkdocstrings[python]>=0.30.1",
]

[dependency-groups]
dev = [
    "covdefaults>=2.3.0",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-timeout>=2.4.0",
    "ruff>=0.13.2",
    "wemake-python-styleguide>=1.4.0",
    "yamllint>=1.37.1",
]

[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py312"
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "A005",   # allow to shadow stdlib and builtin module names
  "COM812", # trailing comma, conflicts with `ruff format`
  # Different doc rules that we don't really care about:
  "D100",
  "D104",
  "D106",
  "D107",     # missing docstring in __init__
  "D203",
  "D212",
  "D401",
  "D404",
  "D405",
  "ISC001",  # implicit string concat conflicts with `ruff format`
  "ISC003",  # prefer explicit string concat over implicit concat
  "PLC0414", # same aliases help mypy to re-export things
  "PLR09",   # we have our own complexity rules
  "PLR2004", # do not report magic numbers
  "PLR6301", # do not require classmethod / staticmethod when self not used
  "RUF001",  # allow russian letters
  "RUF012",  # do not require `ClassVar` annotation on mutable class vars
  "TRY003",  # long exception messages from `tryceratops`
]
external = [ "WPS" ]

flake8-quotes.inline-quotes = "single"
mccabe.max-complexity = 6
pydocstyle.convention = "google"


[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]
"docs/*.py" = [
    "D101",
    "D102",
    "D103",
]

[tool.ruff.lint.isort]
case-sensitive = true


[tool.mypy]
strict = true
install_types = true
plugins = []  # Don't forget to add plugins
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
warn_unreachable = true

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = false

enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
  "explicit-override",
  "mutable-override",
  "unimported-reveal",
  "deprecated",
]
